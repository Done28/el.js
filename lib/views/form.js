// Generated by CoffeeScript 1.10.0
var Form, Promise, View, inputify, observable, settle,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('./view');

inputify = require('./inputify');

observable = require('../riot')().observable;

Promise = require('broken');

settle = require('promise-settle');

Form = (function(superClass) {
  extend(Form, superClass);

  function Form() {
    return Form.__super__.constructor.apply(this, arguments);
  }

  Form.prototype.configs = null;

  Form.prototype.inputs = null;

  Form.prototype.data = null;

  Form.prototype.initInputs = function() {
    var input, name, ref, results1;
    this.inputs = {};
    if (this.configs != null) {
      this.inputs = inputify(this.data, this.configs);
      ref = this.inputs;
      results1 = [];
      for (name in ref) {
        input = ref[name];
        results1.push(observable(input));
      }
      return results1;
    }
  };

  Form.prototype.init = function() {
    return this.initInputs();
  };

  Form.prototype.submit = function(e) {
    var input, name, pRef, ps, ref;
    ps = [];
    ref = this.inputs;
    for (name in ref) {
      input = ref[name];
      pRef = {};
      input.trigger('validate', pRef);
      ps.push(pRef.p);
    }
    settle(ps).then((function(_this) {
      return function(results) {
        var i, len, result;
        for (i = 0, len = results.length; i < len; i++) {
          result = results[i];
          if (!result.isFulfilled()) {
            return;
          }
        }
        return _this._submit.apply(_this, arguments);
      };
    })(this));
    if (e != null) {
      e.preventDefault();
      e.stopPropagation();
    }
    return false;
  };

  Form.prototype._submit = function() {};

  return Form;

})(View);

module.exports = Form;

//# sourceMappingURL=form.js.map
